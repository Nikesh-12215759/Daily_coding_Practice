//JAVA
//Using Kadane Algorithm 
//T(C)=O(n)
class Solution {
    public int maxSubArray(int[] nums) {
        int n=nums.length;
        int maxi= Integer.MIN_VALUE;
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];
            if(sum>maxi)
            {
                maxi=sum;
            }
            if(sum<0)
            {
                sum=0;
            }

        }
        return maxi;
    }
}

//CPP

class Solution {
public:
    
    int maxSubArray(vector<int>& nums) {
        int n=nums.size();
        int maxi=INT_MIN;
        int sum=0;
        for(int i=0;i<n;i++)
        {
            sum+=nums[i];
            if(sum>maxi)
            {
                maxi=sum;
            }
            if(sum<0)
            {
                sum=0;
            }

        }
        return maxi;
    }
};